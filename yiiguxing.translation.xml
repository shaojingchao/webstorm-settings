<application>
  <component name="AppStorage">
    <option name="lastReplacementTargetLanguage" value="CHINESE_TRADITIONAL" />
    <option name="maxHistorySize" value="500" />
    <option name="newTranslationDialogCollapseDictViewer" value="false" />
    <option name="newTranslationDialogWidth" value="592" />
    <option name="newTranslationDialogX" value="592" />
    <option name="newTranslationDialogY" value="341" />
    <histories>
      <item value="scheduler" />
      <item value="Shallow" />
      <item value="Chat-Content-Item" />
      <item value="proposals" />
      <item value="Don't transpile inside node_modules" />
      <item value="descendants" />
      <item value="Ancestors" />
      <item value="Set tracesSampleRate to 1.0 to capture 100% of transactions for performance monitoring. We recommend adjusting this value in production" />
      <item value="PUPPETEER SKIP CHROMIUM DOWNLOAD" />
      <item value="Don't persits null values. This means that all columns with null values will not be saved" />
      <item value="If true, the column will get a unique constraint. If a string is provided, the column will be part of a composite unique index. If multiple columns have the same string, they will be part of the same unique index" />
      <item value="Creates a unique temporary directory. Generates six random characters to be appended behind a requiredprefix to create a unique temporary directory. Due to platform inconsistencies, avoid trailing X characters in prefix. Some platforms, notably the BSDs, can return more than six random characters, and replace trailing X characters in prefix with random characters. The created directory path is passed as a string to the callback's second parameter. The optional options argument can be a string specifying an encoding, or an object with an encoding property specifying the character encoding to use." />
      <item value="Creates a unique temporary directory" />
      <item value="Talk-Boss-Fixed-Input" />
      <item value="transaction" />
      <item value="reverting" />
      <item value="dialect" />
      <item value="belongs" />
      <item value="no-side-effects-in-computed-properties" />
      <item value="cash" />
      <item value="we are only extracting raw values here. validation and default values are handled in the child component itself." />
      <item value="deflate" />
      <item value="compression" />
      <item value="distribution" />
      <item value="eviction" />
      <item value="polling" />
      <item value="recover Missed Executions" />
      <item value="dimensions" />
      <item value="measures" />
      <item value="straight" />
      <item value="workerpool offers an easy way to create a pool of workers for both dynamically offloading computations as well as managing a pool of dedicated workers. workerpool basically implements a [thread pool pattern](http:en.wikipedia.orgwikiThread_pool_pattern). There is a pool of workers to execute tasks. New tasks are put in a queue. A worker executes one task at a time, and once finished, picks a new task from the queue. Workers can be accessed via a natural, promise based proxy, as if they are available straight in the main application." />
      <item value="async" />
      <item value="kaoshizaixian" />
      <item value="This method mutates the array and returns a reference to the same array" />
      <item value="relevent" />
      <item value="ship" />
      <item value="shipload" />
      <item value="船货" />
      <item value="cargo" />
      <item value=" cargo" />
      <item value="immediate shipment of the cargo" />
      <item value="immediate shipment" />
      <item value="Immediate" />
      <item value="immediate" />
      <item value="transposed" />
      <item value="wise" />
      <item value="clockwise" />
      <item value="Camelize" />
      <item value="hyphenate" />
      <item value="Capitalize" />
      <item value="This file is required by the index.html file and will be executed in the renderer process for that window. No Node.js APIs are available in this process because `nodeIntegration` is turned off. Use `preload.js` to selectively enable features needed in the rendering process." />
      <item value="balloon" />
      <item value="accelerator" />
      <item value="dock icon is clicked and there are no other windows open." />
      <item value="Quit when all windows are closed, except on macOS. There, it's common for applications and their menu bar to stay active until the user quits explicitly with Cmd + Q." />
      <item value="This method will be called when Electron has finished initialization and is ready to create browser windows. Some APIs can only be used after this event occurs." />
      <item value="fix transparent window not working in linux bug" />
      <item value="service" />
      <item value="用户登录" />
      <item value="登陆token" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="137" />
        <entry key="ENGLISH" value="112" />
        <entry key="CHINESE_TRADITIONAL" value="1117" />
        <entry key="CHINESE_CANTONESE" value="45" />
        <entry key="INDONESIAN" value="1" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1667735058748" />
  </component>
  <component name="Settings">
    <option name="baiduTranslateSettings">
      <app-key>
        <option name="appId" value="20210522000837962" />
      </app-key>
    </option>
    <option name="overrideFont" value="true" />
    <option name="phoneticFontFamily" value="Consolas" />
    <option name="primaryFontFamily" value="Microsoft YaHei" />
    <option name="selectTargetLanguageBeforeReplacement" value="true" />
    <option name="showWordsOnStartup" value="true" />
    <option name="targetLanguageSelection" value="LAST" />
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="0fe5ba4b25189785" />
      </youdao-translate>
    </option>
  </component>
</application>